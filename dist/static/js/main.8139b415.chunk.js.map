{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/projects/CreateProject.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","console","log","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","createProject","fireStore","getFirestore","authorId","add","firstName","lastName","Date","CreateProject","handleChange","e","setState","target","value","handleSubmit","preventDefault","history","push","onSubmit","htmlFor","onChange","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","doc","set","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8139b415.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from \"react-redux\"\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                    { props.profile.initials }\n                </NavLink>\n            </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({ type: 'LOGIN_ERROR', err},)\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        }).catch(err => {\n            console.log(\"error is, \", err);\n        }) \n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        )\n        .then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        })\n        .then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        })\n        .catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    \n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  console.log(\"Props profile ;\", state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">{moment(item.time.toDate()).fromNow()}</div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{project.createdAt ? moment(project.createdAt.toDate()).calendar() : ''}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, {Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props)\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        notifications: state.firestore.ordered.notifications,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n        // higher order components\n        connect(mapStateToProps),\n        firestoreConnect(\n            [ \n                { collection: 'projects', orderBy:[\"createdAt\", \"desc\"] },\n                { collection: 'notifications', limit: 3, orderBy:[\"time\", \"desc\"]}\n            ]\n        )\n    )(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n    if  (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{ project.title }</span>\n                        <p>{ project.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posed by { project.authorFirstName } { project.authorLastName }</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n        connect(mapStateToProps),\n        firestoreConnect(\n            [ { collection: 'projects' } ]\n        )\n    )(ProjectDetails);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        const profile = getState().firebase.profile \n        const authorId = getState().firebase.auth.uid;\n        console.log(profile);\n        fireStore.collection('projects').add(\n            {\n                ...project,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorId: authorId,\n                createdAt: new Date()\n            }\n        )\n        .then(() => {\n            dispatch({ type:'CREATE_PROJECT', project: project })\n        })\n        .catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n\n    }\n};","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {createProject} from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title:'',\n        content:''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: project => dispatch(createProject(project))\n    }\n}\n\n//null added in place of matchStateToProps\nexport default connect(mapStateToProps , mapDispatchToProps)(CreateProject)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, {Component} from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport CreateProject from './components/projects/CreateProject'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\n\nclass  App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/create\" component={CreateProject} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log(\"State is: \", state);\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default:\n            return state    \n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id:'1', title:'help me find peach', content:'blah blah blah'},\n        {id:'2', title:'help me find apple', content:'blah blah blah'},\n        {id:'3', title:'help me find mango', content:'blah blah blah'},\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            console.log(\"Creating project!\", action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('Create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers(\n    {\n        auth: authReducer,\n        project: projectReducer,\n        firestore: firestoreReducer,\n        firebase: firebaseReducer\n    }\n);\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCXiaaKeEoxxMCDoeiHToiRTnFad_KuAqg\",\n    authDomain: \"nv-marioplan.firebaseapp.com\",\n    databaseURL: \"https://nv-marioplan.firebaseio.com\",\n    projectId: \"nv-marioplan\",\n    storageBucket: \"\",\n    messagingSenderId: \"823946612980\",\n    appId: \"1:823946612980:web:8c57da3f320f3de21acea1\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n    rootReducer, \n    \n    compose (\n        // store enhancers\n        applyMiddleware(\n            thunk.withExtraArgument({ getFirebase, getFirestore })\n        ),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(\n            fbConfig,\n            { \n                useFirestoreForProfile: true, // to sync firestore 'users' collection to 'profile' attribute of firebase\n                userProfile: 'users',\n                attachAuthIsReady: true\n            }\n        )\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, \n        document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}