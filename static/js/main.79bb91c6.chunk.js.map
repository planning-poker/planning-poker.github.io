{"version":3,"sources":["components/layout/Navbar.js","components/layout/SignedInLinks.js","store/actions/authActions.js","store/actions/roomActions.js","components/users/CreateUser.js","store/actions/userActions.js","components/rooms/EnterRoom.js","components/rooms/Room.js","components/rooms/InvalidRoom.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/userReducer.js","store/reducers/roomReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","console","log","props","className","to","onClick","profile","initials","state","firebase","joinRoom","room","fireStore","getFirestore","userId","user","id","username","name","joinMessage","author","data","text","collection","doc","get","docSnapshot","exists","update","users","FieldValue","arrayUnion","messageList","CreateUser","handleChange","e","setState","target","value","handleSubmit","preventDefault","createUser","alert","this","location","redirectRoom","roomId","split","onSubmit","onChange","htmlFor","Component","add","firstName","lastName","userDetails","EnterRoom","handleCreateSubmit","createRoom","handleJoinSubmit","handleFileDrop","acceptedFiles","length","file","reader","FileReader","onabort","onerror","onload","userStories","result","filter","story","forEach","stories","M","toast","displayLength","classes","html","readAsBinaryString","Tabs","init","swipeable","invalidRoom","ref","href","onDrop","getRootProps","getInputProps","moderator","currentStory","currentStoryId","currentVotes","roundsHistory","activeRound","currentStartTime","Room","updateStory","updateCurrentStory","toggleRound","toggle","uuid","v4","castVote","vote","currentVote","copyUrl","keepOnPage","leaveRoom","roomTest","assignStory","render","message","emoji","sendMessage","jsPDF","res","autoTableHtmlToJson","document","getElementById","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","options","beforePageContent","setFontSize","setTextColor","setFontStyle","settings","margin","left","startY","autoTableEndPosY","autoTable","columns","save","window","addEventListener","elems","querySelectorAll","ddelems","Modal","sideElems","Dropdown","Sidenav","removeEventListener","currentScore","userList","localRoom","currentUserStatus","showRoundResult","isOpen","newMessagesCount","pathname","history","roomUrl","currentUserVote","find","obj","showVotingCards","map","width","height","src","key","showUserStories","data-target","readOnly","onCopy","url","subject","color","visible","placeholder","userVoteObj","fileName","title","printDocument","round","storyId","storyName","score","duration","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","bind","showEmoji","compose","firestore","ordered","rooms","getTime","reduce","total","voteObj","currentEndTime","Math","d","time","getUTCMinutes","getUTCSeconds","userVote","userName","voteList","push","quitMessage","Promise","all","delete","firestoreConnect","match","params","InvalidRoom","App","exact","path","component","Boolean","hostname","initState","authError","authReducer","action","projects","content","projectReducer","loggedIn","userReducer","roomReducer","appReducer","combineReducers","project","firestoreReducer","firebaseReducer","rootReducer","undefined","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6RA2BeA,GCDAA,YAAQ,KAPI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECNZ,SAACA,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAEhBC,OAAOH,UAAUI,KAAK,WAC3BL,EAAS,CAAEM,KAAM,sBAClBC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,UDMTT,CArBO,SAACY,GACnB,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,cAAZ,eACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,KAAI,uBAAGC,QAASH,EAAMV,SAAlB,aACpB,4BACI,kBAAC,IAAD,CAASY,GAAG,IAAID,UAAU,mCACpBD,EAAMI,QAAQC,cDerBjB,YAPS,SAACkB,GACvB,MAAM,CACJb,KAAMa,EAAMC,SAASd,KACrBW,QAASE,EAAMC,SAASH,UAIbhB,CArBA,SAACY,GACYA,EAAlBP,KAAkBO,EAAZI,QAId,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,uB,iBGkCKO,G,OAAW,SAACC,GACrB,OAAO,SAACpB,EAAUE,EAAX,GAAwD,EAAjCC,YAAkC,IACtDkB,GAAYC,EADyC,EAApBA,gBAMjCC,EAASrB,IAAWsB,KAAKC,GACzBC,EAAWxB,IAAWsB,KAAKG,KAC3BH,EAAO,CAAC,GAAKD,EAAQ,KAAOG,GAC9BE,EAAc,CACdC,OAAQ,OACRvB,KAAM,OACNwB,KAAM,CACFC,KAAM,gBAAQL,EAAW,0BAIhBL,EAAUW,WAAW,SAASC,IAAIb,EAAKK,IAC/CS,MACR7B,KAAK,SAAC8B,GACCA,EAAYC,OACZf,EAAUW,WAAW,SAASC,IAAIb,EAAKK,IAAIY,OAAO,CAClDC,MAAOjB,EAAUkB,WAAWC,WAAWhB,GACvCiB,YAAapB,EAAUkB,WAAWC,WAAWZ,KAE5CvB,KACGL,EAAS,CAAEM,KAAK,YAAac,KAAKA,KAErCb,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,kBAAmBE,UAIxCR,EAAS,CAAEM,KAAM,yBC5E3BoC,E,2MACLzB,MAAQ,CACPU,KAAM,I,EAGPgB,aAAe,SAACC,GACf,EAAKC,SAAL,eACCD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAGzBC,aAAe,SAACJ,GACfA,EAAEK,iBACE,EAAKhC,MAAMU,KACV,EAAKhB,MAAMuC,WAAW,EAAKjC,OADXkC,MAAM,0B,wEAI3B,GAAGC,KAAKzC,MAAMa,MAAQ4B,KAAKzC,MAAMa,KAAKC,IAAM2B,KAAKzC,MAAM0C,UAAYD,KAAKzC,MAAM0C,SAASpC,OAASmC,KAAKzC,MAAM0C,SAASpC,MAAMqC,aAAa,CACtI,IAAIC,EAASH,KAAKzC,MAAM0C,SAASpC,MAAMqC,aAAaE,MAAM,KAAK,GAE/D,OADAJ,KAAKzC,MAAMQ,SAAS,CAAC,GAAKoC,IACnB,kBAAC,IAAD,CAAU1C,GAAKuC,KAAKzC,MAAM0C,SAASpC,MAAMqC,eAE5C,OAAIF,KAAKzC,MAAMa,MAAQ4B,KAAKzC,MAAMa,KAAKC,GACpC,kBAAC,IAAD,CAAUZ,GAAK,gBAEvBJ,QAAQC,IAAI,WAAY0C,KAAKzC,MAAM0C,UAEnC,yBAAKzC,UAAU,aACd,0BAAMA,UAAU,QAAQ6C,SAAUL,KAAKJ,cACvC,wBAAIpC,UAAU,2BAAd,eACA,yBAAKA,UAAU,eAEd,uBAAGA,UAAU,yBAAb,kBACA,2BAAON,KAAK,OAAOmB,GAAG,OAAOb,UAAU,WAAW8C,SAAUN,KAAKT,eACjE,2BAAOgB,QAAQ,QAAf,aAED,yBAAK/C,UAAU,eACd,4BAAQA,UAAU,gCAAlB,uB,GApCqBgD,aAyDV7D,cAbS,SAACkB,GACxB,MAAO,CACNO,KAAMP,EAAMO,OAIa,SAACxB,GAC3B,MAAO,CACNkD,WAAY,SAACvB,GAAD,OAAU3B,EC1DE,SAAC2B,GACvB,OAAO,SAAC3B,EAAUE,EAAX,GAAwD,EAAjCC,aACRmB,EADyC,EAApBA,gBAE7BU,WAAW,SAAS6B,IAC1B,CACIC,UAAWnC,EAAKA,KAChBoC,SAAUpC,EAAKA,KACfX,SAAU,OAGjBX,KAAK,SAASmB,GAEX,IAAIwC,EAAc,CACdvC,GAAGD,EAAKC,GACRE,KAAMA,EAAKA,MAEf3B,EAAS,CAAEM,KAAK,cAAe0D,kBAElCzD,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,oBAAqBE,WDuCjB0C,CAAWvB,KAC1CR,SAAU,SAACC,GAAD,OAAUpB,EAASmB,EAASC,OAIzBrB,CAA6C2C,G,0PEtDtDuB,E,YAaL,WAAYtD,GAAQ,IAAD,8BAClB,4CAAMA,KAIPgC,aAAe,SAACC,GAEf,EAAKC,SAAL,eACED,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,SARP,EAanBmB,mBAAqB,SAACtB,GACrBA,EAAEK,iBACC,EAAKhC,OAAS,EAAKA,MAAMU,KAC3B,EAAKhB,MAAMwD,WAAW,EAAKlD,OAE3BkC,MAAM,8BAlBW,EAsBnBiB,iBAAmB,SAACxB,GACnBA,EAAEK,iBACF,EAAKtC,MAAMQ,SAAS,EAAKF,QAxBP,EA2BnBoD,eAAiB,SAACC,GACjB,GAA6B,IAAzBA,EAAcC,OAAc,CAC/B,IAAIC,EAAOF,EAAc,GACzB,GAAgB,YAAbE,EAAKlE,MAAmC,cAAbkE,EAAKlE,KAAqB,CACvD,IAAMmE,EAAS,IAAIC,WACnBD,EAAOE,QAAU,kBAAMlE,QAAQC,IAAI,6BACnC+D,EAAOG,QAAU,kBAAMnE,QAAQC,IAAI,4BACnC+D,EAAOI,OAAS,WACf,IACIC,EADiBL,EAAOM,OACGvB,MAAM,MAAMwB,OAAO,SAAAC,GACjD,OAAOA,EAAMV,OAAO,IAErBO,EAAYI,QAAQ,SAAAD,GACnBxE,QAAQC,IAAI,cAAeuE,KAE5B,EAAKpC,S,qVAAL,IAAkB,EAAK5B,MAAvB,CAA8BkE,QAASL,KAMvCM,IAAEC,MALY,CACbC,cAAe,KACfC,QAAS,UACTC,KAAM,wBAGP/E,QAAQC,IAAI,EAAKO,QAGlBqD,EAAcY,QAAQ,SAAAV,GAAI,OAAIC,EAAOgB,mBAAmBjB,UAIxDrB,MAAM,qCAGLA,MAAM,wBA3DS,E,iFAHlBiC,IAAEM,KAAKC,KAAKvC,KAAKsC,KAJH,CACbE,WAAW,Q,8CAqEH,IAAD,SAC8BxC,KAAKzC,MAAnCS,EADA,EACAA,KAAYI,GADZ,EACMpB,KADN,EACYoB,MADZ,EACkB2D,QAE1B,GAAI3D,IAASA,EAAKC,GACjB,OAAO,kBAAC,IAAD,CAAUZ,GAAG,gBAIrB,GAAGuC,KAAKzC,MAAMkF,YAAa,CAM1BT,IAAEC,MALY,CACbC,cAAe,IACfC,QAAS,UACTC,KAAM,6BAKR,OAAIpE,GAAQA,EAAKK,GACT,kBAAC,IAAD,CAAUZ,GAAK,SAASO,EAAKK,KAKnC,yBAAKb,UAAU,OACd,yBAAKA,UAAU,mBACd,wBAAIkF,IAAM,SAAAJ,GAAU,EAAKA,KAAOA,GAAQjE,GAAG,kBAAkBb,UAAU,4CACtE,wBAAIA,UAAU,OACb,uBAAGmF,KAAK,oBAAR,gBAED,wBAAInF,UAAU,OACb,uBAAGmF,KAAK,kBAAR,eAIF,yBAAKtE,GAAG,mBACP,0BAAMb,UAAU,aAAa6C,SAAUL,KAAKc,oBAC3C,wBAAItD,UAAU,2BAAd,eACA,yBAAKA,UAAU,eACd,uBAAGA,UAAU,yBAAb,mBACA,2BAAON,KAAK,OAAOmB,GAAG,OAAOiC,SAAUN,KAAKT,eAC5C,2BAAOgB,QAAQ,QAAf,cAED,yBAAK/C,UAAU,6CAEd,kBAAC,IAAD,CAAUoF,OAAQ,SAAA1B,GAAa,OAAI,EAAKD,eAAeC,KACtD,gBAAE2B,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACA,iCACA,wBAASD,IACR,0BAAWC,KACX,wIACA,6BACA,uBAAGtF,UAAU,wBAAb,sBASH,yBAAKA,UAAU,eACd,4BAAQA,UAAU,gCAAlB,kBAKH,yBAAKa,GAAG,iBACP,0BAAMb,UAAU,aAAa6C,SAAUL,KAAKgB,kBAC3C,wBAAIxD,UAAU,2BAAd,aACA,yBAAKA,UAAU,eAEd,uBAAGA,UAAU,yBAAb,eACA,2BAAON,KAAK,OAAOmB,GAAG,KAAKiC,SAAUN,KAAKT,eAC1C,2BAAOgB,QAAQ,MAAf,YAED,yBAAK/C,UAAU,eACd,4BAAQA,UAAU,gCAAlB,sB,GAxJegD,aAqLT7D,cAlBS,SAACkB,GAGxB,OAFGA,GACFR,QAAQC,IAAI,eAAgBO,GACtB,CACNG,KAAMH,EAAMG,KACZI,KAAMP,EAAMO,KACZqE,YAAa5E,EAAMG,KAAKyE,YACxBV,QAASlE,EAAMkE,UAIU,SAACnF,GAC3B,MAAO,CACNmE,WAAY,SAAC/C,GAAD,OAAUpB,EHvLE,SAACoB,GACvB,OAAO,SAACpB,EAAUE,EAAX,GAAwD,EAAjCC,YAAkC,IACtDkB,GAAYC,EADyC,EAApBA,gBAInCM,GADY1B,IAAWgB,SAASH,QAClB,CACdc,OAAQ,OACRvB,KAAM,OACNwB,KAAM,CACFC,KAAM,gBAAQ7B,IAAWsB,KAAKG,KAAO,2BAI7CN,EAAUW,WAAW,SAAS6B,IAC1B,CACIlC,KAAMP,EAAKO,KACXW,MAAO,CACH,CACI,KAAOpC,IAAWsB,KAAKG,KACvB,GAAKzB,IAAWsB,KAAKC,GACrB,QAAU,EACV,iBAAoB,IAG5B0E,UAAWjG,IAAWsB,KAAKC,GAC3B2E,aAAc,GACdC,eAAgB,KAChBC,aAAc,GACdC,cAAe,GACfC,aAAa,EACb/D,YAAa,CAACb,GACd6E,iBAAkB,EAClBtB,QAAS/D,GAAQA,EAAK+D,QAAS/D,EAAK+D,QAAU,KAGrD9E,KAAK,SAACe,GACHX,QAAQC,IAAI,wBAAyBU,GACrCpB,EAAS,CAAEM,KAAK,cAAec,KAAKA,MAEvCb,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,oBAAqBE,WG+IjB2D,CAAW/C,KAC1CD,SAAU,SAACC,GAAD,OAAUpB,EAASmB,EAASC,OAIzBrB,CAA6CkE,G,0GC3KtDyC,G,mBAMF,WAAY/F,GAAQ,IAAD,8BACf,4CAAMA,KALVM,MAAQ,GAIW,EAkFnB0B,aAAe,SAACC,GACZA,EAAEK,iBACF,IAAI0D,EAAc,CACd,GAAK,EAAKhG,MAAMS,KAAK,GAAGK,GACxB,aAAgBmB,EAAEE,OAAOC,OAE7B,EAAKpC,MAAMiG,mBAAmBD,IAxFf,EA2FnBE,YAAc,SAACC,GAEX,GAAGA,IAAW,EAAKnG,MAAMyF,aAAcjD,MAAM,qCACxC,CACD,IAAI0D,EAAc,CACd,GAAK,EAAKlG,MAAMS,KAAK,GAAGK,GACxB,YAAeqF,EACf,eAAkBA,EAASC,IAAKC,KAAO,MAE3C,EAAKrG,MAAMkG,YAAYA,KApGZ,EAwGnBI,SAAW,SAACC,GACR,IAAIC,EAAc,CACd,OAAS,EAAKxG,MAAMS,KAAK,GAAGK,GAC5B,OAAU,EAAKd,MAAMa,KAAKC,GAC1B,SAAY,EAAKd,MAAMa,KAAKG,KAC5B,KAAQuF,GAEZ,EAAKvG,MAAMsG,SAASE,IA/GL,EAkHnBC,QAAU,WAMNhC,IAAEC,MALY,CACVC,cAAe,IACfC,QAAS,UACTC,KAAM,gBAtHK,EA2HnB6B,WAAa,SAACzE,GACV,EAAKjC,MAAM2G,UAAU,EAAK3G,MAAM4G,WA5HjB,EAgInBC,YAAc,SAACvC,GACX,IAAI0B,EAAc,CACd,GAAK,EAAKhG,MAAMS,KAAK,GAAGK,GACxB,aAAgBwD,GAEpB,EAAKtE,MAAMiG,mBAAmBD,IAnI9B,EAAK1F,MAAQ,CACTwG,QAAQ,GAHG,E,+EAODC,GACK,QAAhBA,EAAQpH,KACPoH,EAAQ5F,KAAKC,KAAMqB,KAAKzC,MAAMa,KAAKG,KAAO,iBAAS+F,EAAQ5F,KAAKC,KAE5C,SAAhB2F,EAAQpH,OACZoH,EAAQpH,KAAO,OACfoH,EAAQ5F,KAAKC,KAAOqB,KAAKzC,MAAMa,KAAKG,KAAO,iBAAS+F,EAAQ5F,KAAK6F,OAErEvE,KAAKzC,MAAMiH,YAAY,CACnB/F,OAAQ,OACRvB,KAAMoH,EAAQpH,KACdwB,KAAM4F,EAAQ5F,S,8EAYlB,IAAIG,EAAM,IAAI4F,EAAM,KAChBC,EAAM7F,EAAI8F,oBAAoBC,SAASC,eAAe,sBAEtDC,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cACjBT,EAAQM,EAAK,IAAMJ,EAAK,IAAMM,EAE9B,IAQIE,EAAU,CACVC,kBATS,SAAS/G,GAClBG,EAAI6G,YAAY,IAChB7G,EAAI8G,aAAa,IACjB9G,EAAI+G,aAAa,UAEjB/G,EAAIF,KAAK,oBAAsBmG,EAAOpG,EAAKmH,SAASC,OAAOC,KAAM,KAKjED,OAAO,GACPE,OAAQnH,EAAIoH,mBAAqB,IAGrCpH,EAAIqH,UAAUxB,EAAIyB,QAASzB,EAAIhG,KAAM8G,GAErC3G,EAAIuH,KAAK,wB,0CAKTC,OAAOC,iBAAiB,eAAgBtG,KAAKiE,YAC7CoC,OAAOC,iBAAiB,SAAUtG,KAAKiE,YACvCoC,OAAOC,iBAAiB,WAAYtG,KAAKiE,YACzC,IAAIsC,EAAQ3B,SAAS4B,iBAAiB,UAElCC,GADYzE,IAAE0E,MAAMnE,KAAKgE,GACf3B,SAAS4B,iBAAiB,sBAEpCG,GADc3E,IAAE4E,SAASrE,KAAKkE,GAClB7B,SAAS4B,iBAAiB,aACtBxE,IAAE6E,QAAQtE,KAAKoE,K,6CASnCN,OAAOS,oBAAoB,eAAgB9G,KAAKiE,YAChDoC,OAAOC,iBAAiB,SAAUtG,KAAKiE,YACvCoC,OAAOC,iBAAiB,WAAYtG,KAAKiE,c,+BAyDtC,IAAD,SAMmIjE,KAAKzC,MAAlIS,EANN,EAMMA,KAAMgF,EANZ,EAMYA,aAAc+D,EAN1B,EAM0BA,aAAc3D,EANxC,EAMwCA,YAAaD,EANrD,EAMqDA,cAAe9D,EANpE,EAMoEA,YAAa2H,EANjF,EAMiFA,SAAUC,EAN3F,EAM2FA,UAA4BlF,GANvH,EAMsGmC,UANtG,EAMiH9F,KANjH,EAMuH2D,SAKrHmF,EAAoBF,EAAWA,EAASpF,OAAO,SAACxD,GAChD,OAAOA,EAAKC,IAAM,EAAKd,MAAMa,KAAKC,KACjC,GAWK8I,KATGD,GAAoBA,EAAkBE,OAE5BF,GAAoBA,EAAkBG,iBAOjCN,EAExB,0BAAMvJ,UAAU,SAAUuJ,EAA1B,WAEA,IAEJ,GAAIE,IAAcA,EAAU5I,GAAI,OAAO,kBAAC,IAAD,CAAUZ,GAAI,CAC7C6J,SAAU,gBAIlB,GADAjK,QAAQC,IAAI,SAAO0C,KAAKzC,OACpByC,KAAKzC,MAAMa,OAAS4B,KAAKzC,MAAMa,KAAKC,GAAI,OAAO,kBAAC,IAAD,CAAUZ,GAAI,CACzD6J,SAAU,cACVzJ,MAAO,CACHqC,aAAcF,KAAKzC,MAAMgK,QAAQtH,SAASqH,aAKtD,IAAIE,EAAUxJ,GAAQA,EAAK,GAAGK,GAAK,6CAA6CL,EAAK,GAAGK,GAAG,GAEvFoJ,EAAkBzJ,GAAQA,EAAK,GAAGkF,aAAawE,KAAK,SAAAC,GACpD,OAAOA,EAAIxJ,SAAW,EAAKZ,MAAMa,KAAKC,KAGpCuJ,EA7CQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,KA6CZC,IAAI,SAAA/D,GAC1B,OACIA,EAAO,GACH,yBACIpG,QAAS,kBAAI,EAAKmG,SAASC,IAC3BtG,UAAaiK,GAAmB3D,GAAQ2D,EAAgB3D,KACtD,qCACA,uBACFgE,MAAM,MAAMC,OAAO,MACnBC,IAAK,QAAQlE,EAAK,OAClBmE,IAAKnE,IAGT,yBACIpG,QAAS,kBAAI,EAAKmG,SAASC,IAC3BtG,UAAaiK,GAAmB3D,GAAQ2D,EAAgB3D,KAExD,qCACE,uBACFgE,MAAM,MAAMC,OAAO,MACnBC,IAAK,QAAQlE,EAAK,OAClBmE,IAAKnE,MAKnBoE,EAAkBnG,EAAQ8F,IAAI,SAAChG,GACjC,OAAO,uBAAGnE,QAAS,kBAAI,EAAK0G,YAAYvC,IAAQoG,IAAKpG,EAAOc,KAAK,KAAKnF,UAAYwF,GAAgBA,GAAgBnB,EAAO,yBAA0B,mBAAoBA,KA2O3K,OAtOG7B,KAAKnC,MAAMwG,OACQ,6BAClB,yBAAK7G,UAAU,aAGX,4BACKQ,EAAOA,EAAK,GAAGO,KAAO,GACvB,uBAAGf,UAAU,oCAAoCE,QAAS,WACtDL,QAAQC,IAAI,WAAY,EAAKC,OAE7B,EAAKA,MAAM2G,UAAU,EAAK3G,MAAM4G,UAChC9G,QAAQC,IAAI,QAAS,EAAKC,SAE1B,uBAAGC,UAAU,wBAAb,eANJ,QASA,uBAAGA,UAAU,yDAAyDmF,KAAK,gBACvE,uBAAGnF,UAAU,wBAAb,SADJ,eAIA,yBAAKA,UAAU,sCACf,uBAAGA,UAAU,yCAAyCmF,KAAK,IAAIwF,cAAY,aAAY,uBAAG3K,UAAU,wBAAb,SACnF,wBAAIa,GAAG,YAAYb,UAAU,oBACzB,4BACI,uBAAGA,UAAU,gBAAgBmF,KAAK,gBAAlC,UAKJ,4BACI,uBAAGjF,QAAS,WAAK,EAAKH,MAAM2G,UAAU,EAAK3G,MAAM4G,YAAjD,YAUhB,yBAAK9F,GAAG,cAAcb,UAAU,sBAC5B,yBAAKA,UAAU,8BACX,0CAEA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kCACX,2BAAON,KAAK,OAAOkL,UAAQ,EAACzI,MAAO6H,KAEvC,yBAAKhK,UAAU,gBACX,kBAAC,kBAAD,CAAiBmB,KAAM6I,EAASa,OAAQrI,KAAKgE,SACzC,uBAAGxG,UAAU,qBACT,uBAAGA,UAAU,wBAAb,oBAMhB,6BACI,kBAAC,WAAD,CAAU8K,IAAKd,IACf,kBAAC,QAAD,CAAOc,IAAKd,EAAS7I,KAAM,QAAS4J,QAAS,sCAIrD,yBAAK/K,UAAU,gBACX,uBAAGmF,KAAK,KAAKnF,UAAU,iDAAvB,YAMZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBAGX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,cAAhB,gBAEI,0BAAMA,UAAU,SACZ,kBAAC,IAAD,CAAQN,KAAK,QAAQsL,MAAM,QAAQT,OAAQ,GAAID,MAAO,GAAIW,QAASrF,MAG3E,yBAAK5F,UAAU,eACX,8BACAN,KAAK,OACLmB,GAAG,eACHsB,MAAOqD,EACP1C,SAAUN,KAAKT,aACf6I,SAAWhF,EACXsF,YAAY,iBACZlL,UAAU,2BAGlB,yBAAKA,UAAU,eAEP4F,EACA,uBAAG5F,UAAU,+BAA+BE,QAAS,kBAAI,EAAK+F,aAAY,KAA1E,OAEA,uBAAGjG,UAAU,+BAA+BE,QAAS,kBAAI,EAAK+F,aAAY,KAA1E,WAORL,EAEA,yBAAK5F,UAAU,cACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,2BAAhB,eACA,yBAAKA,UAAU,0BACToK,KAIZ,IAIDxE,GAAerB,GAAWA,EAAQZ,OAAO,EAE1C,yBAAK3D,UAAU,0CACX,yBAAKA,UAAU,qBAAoB,6CACjC0K,GAGN,IAIR,yBAAK1K,UAAU,iBAGX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,cAAf,gBAEM2J,GAEN,yBAAK3J,UAAU,OACVQ,GAAQA,EAAK,GAAGkB,MAAM2I,IAAI,SAAAzJ,GACvB,IAAIuK,EAAc3K,EAAK,GAAGkF,aAAawE,KAAK,SAAAC,GACxC,OAAOA,EAAIxJ,SAAWC,EAAKC,KAI3BuK,GAFWD,GAAcA,EAAY7E,KAE1B6E,GAAeA,EAAY7E,OAASV,EAAc,QAAQuF,EAAY7E,KAAK,OAAS,yBAEnG,OAEI,yBAAKmE,IAAK7J,EAAKC,GAAIb,UAAU,sBAG7BmL,GAAeA,EAAY7E,OAASV,EAEpC,yBAAK5F,UAAU,QAAQsK,MAAM,MAAMC,OAAO,MAAMC,IAAKY,IAIrD,yBAAKpL,UAAU,oBAAoBsK,MAAM,MAAMC,OAAO,MAAMC,IAAKY,IAG7D,2BACMxK,EAAKG,KAEHoK,GAAeA,EAAY7E,MAAQV,EAC/B,uBAAI5F,UAAU,8CAAd,QACF,UAWlC,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,gBAEI,uBAAGqL,MAAM,mBAAmBrL,UAAU,sCAAsCE,QAASsC,KAAK8I,eAA1F,mBAGJ,2BAAOtL,UAAU,UAAUa,GAAG,qBAC1B,+BACI,4BACI,0CACA,6CACA,0CAGR,+BAEI8E,GAAiBA,EAAc0E,IAAI,SAAAkB,GAC/B,OACI,wBAAId,IAAMc,EAAMC,SACZ,4BAAMD,EAAME,WACZ,4BAAMF,EAAMG,OACZ,4BAAMH,EAAMI,mBAYhD,kBAAC,IAAD,CACIC,aAAc,CACdC,SAAU,sBACVC,SAAU,mEAEVC,iBAAkBvJ,KAAKwJ,kBAAkBC,KAAKzJ,MAC9CX,YAAaA,EACbqK,WAAS,KAKK,O,GA/bXlJ,cAqfJmJ,cACdhN,YA1CuB,SAACkB,GAExB,OADGR,QAAQC,IAAI,iBAAkBO,GAC1B,CACAG,KAAMH,EAAM+L,UAAUC,QAAQC,MAE9B9G,aAAcnF,EAAM+L,UAAUC,QAAQC,MAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAG9G,aAAe,GAE9F3D,YAAaxB,EAAM+L,UAAUC,QAAQC,MAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAGzK,YAAc,GAE5F0C,QAASlE,EAAM+L,UAAUC,QAAQC,MACjCjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAG/H,QAAU,GAE3CgF,aAAclJ,EAAM+L,UAAUC,QAAQC,MAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAG/C,aAAe,GAE9F3D,cAAavF,EAAM+L,UAAUC,QAAQC,OAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAG1G,YAE9ED,cAAetF,EAAM+L,UAAUC,QAAQC,MAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAG3G,cAAgB,GAEhG/E,KAAMP,EAAMO,KACZ6I,UAAUpJ,EAAMG,KAChBkG,UAAWrG,EAAMG,KAAKkG,UAEtBC,SAAUtG,EAAM+L,UAAUC,QAAQC,MAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAK,KAE7E9C,SAAUnJ,EAAM+L,UAAUC,QAAQC,MAAQjM,EAAM+L,UAAUC,QAAQC,MAAM,GAAG5K,MAAQ,KAKhE,SAACtC,GAC3B,MAAO,CAEA4G,mBAAoB,SAAC3B,GAAD,OAAWjF,GJvaJ8B,EIuagCmD,EJtaxD,SAACjF,EAAUE,EAAX,GAAwD,EAAjCC,aACRmB,EADyC,EAApBA,gBAE7BU,WAAW,SAASC,IAAIH,EAAKL,IAAIY,OAAO,CAC9C,aAAgBP,EAAKsE,eAExB/F,KAAK,WACFL,EAAS,CAAEM,KAAK,cAAewB,KAAMA,MAExCvB,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,oBAAqBE,aAVhB,IAACsB,GIwa3B+E,YAAa,SAACC,GAAD,OAAY9G,EJxZN,SAAC8G,GACxB,OAAO,SAAC9G,EAAUE,EAAX,GAAyD,IAAlCC,EAAiC,EAAjCA,YACpBkB,GAAYC,EADyC,EAApBA,gBAEtBnB,IAEjB,GAAG2G,EAAON,YAENnF,EAAUW,WAAW,SAASC,IAAI6E,EAAOrF,IAAIY,OAAQ,CACjDmE,YAAaM,EAAON,YACpBH,eAAgBS,EAAOT,eACvBC,aAAc,GACd6D,aAAc,KACd1D,kBAAkB,IAAI0B,MAAOgF,YAEhC9M,KAAK,WACFL,EAAS,CAAEM,KAAK,eAAgBwB,KAAMgF,MAEzCvG,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,qBAAsBE,cAGxC,CACH,IAAIY,EAAOlB,IAAW8M,UAAUC,QAAQC,MAAM,GAC1CZ,EAAQ,EACTlL,EAAKkF,aAAa/B,OAAS,IAC1B+H,EAAQlL,EAAKkF,aAAa8G,OACtB,SAACC,EAAOC,GACJ,OAAOD,EAAQC,EAAQpG,MAC5B,GACHoF,GAAgBlL,EAAKkF,aAAa/B,QAGtC,IAAIgJ,GAAiB,IAAIpF,MAAOgF,UAC5BZ,EAAWgB,EAAiBnM,EAAKqF,iBACrC8F,EAAW,IAAKiB,KAAKrB,MAAMI,EAAS,KACpC,IAAIkB,EAAI,IAAItF,KAAKoE,GACb5B,EAAU,CACVyB,QAAShL,EAAKiF,eACdgG,UAAWjL,EAAKgF,aAChBkG,MAAOA,EACPoB,KAAMH,EACNhB,SAAUkB,EAAEE,gBAAkB,MAAQF,EAAEG,gBAAkB,KAG9DvM,EAAUW,WAAW,SAASC,IAAI6E,EAAOrF,IAAIY,OAAQ,CACjDmE,YAAaM,EAAON,YACpBD,cAAelF,EAAUkB,WAAWC,WAAWmI,GAE/CvE,aAAc,GACdC,eAAgB,KAChB8D,aAAcmC,IAEjBjM,KAAK,WACFL,EAAS,CAAEM,KAAK,eAAgBwB,KAAMgF,MAEzCvG,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,qBAAsBE,YIgWbqG,CAAYC,KAC9CG,SAAU,SAACE,GAAD,OAAiBnH,EJzVX,SAACmH,GACrB,OAAO,SAACnH,EAAUE,EAAX,GAAwD,EAAjCC,YAAkC,IAE1C,EADZkB,GAAYC,EADyC,EAApBA,gBAEjCuM,EAA6C,CAAEtM,QAAnC,EAA8D4F,GAA3D5F,OAAwC2F,KAA3C,EAAWA,KAAsC4G,SAAjD,EAAiBA,UAC/BC,EAAS,GACT3M,EAAOlB,IAAW8M,UAAUC,QAAQC,MAAM,GAC3C9L,GAAQA,EAAKkF,eACZyH,EAAW3M,EAAKkF,aAAatB,OAAO,SAAAkC,GAChC,OAAOA,EAAK3F,SAAWsM,EAAStM,UAGxCwM,EAASC,KAAKH,GACdxM,EAAUW,WAAW,SAASC,IAAIkF,EAAY5D,QAAQlB,OAAO,CACzDiE,aAAcyH,IAEjB1N,KAAK,WACFL,EAAS,CAAEM,KAAK,YAAa6G,kBAEhC5G,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,kBAAmBE,WIsUJyG,CAASE,KAC7CG,UAAW,SAAClG,GAAD,OAAUpB,EJhUJ,SAACoB,GACtB,OAAO,SAACpB,EAAUE,EAAX,GAAwD,EAAjCC,YAAkC,IACtDkB,GAAYC,EADyC,EAApBA,gBAEjCC,EAASrB,IAAWsB,KAAKC,GAE3BwM,EAAc,CACdpM,OAAQ,OACRvB,KAAM,OACNwB,KAAM,CACFC,KAAM,gBALG7B,IAAWsB,KAAKG,KAKA,wBAGjCuM,QAAQC,IAAI,CACa,GAArB/M,EAAKkB,MAAMiC,QAAenD,EAAKkB,MAAM,GAAGb,IAAMF,EAE9CF,EAAUW,WAAW,SAASC,IAAIb,EAAKK,IAAI2M,SAG3C/M,EAAUW,WAAW,SAASC,IAAIb,EAAKK,IAAIY,OAAO,CAC9CC,MAAOlB,EAAKkB,MAAM0C,OAAO,SAAAxD,GAAI,OAAIA,EAAKC,KAAOF,IAC7CkB,YAAY,GAAD,mBAAMrB,EAAKqB,aAAX,CAAwBwL,MAGvC5M,EAAUW,WAAW,SAASC,IAAIV,GAAQ6M,WAG7C/N,KAGGL,EAAS,CAAEM,KAAK,aAAcc,KAAKA,KAEtCb,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,mBAAoBE,WIgSX8G,CAAUlG,KACxCwG,YAAa,SAAC9F,GAAD,OAAU9B,EJzRJ,SAAC8B,GACxB,OAAO,SAAC9B,EAAUE,EAAX,GAAwD,EAAjCC,YAAkC,IACtDkB,GAAYC,EADyC,EAApBA,gBAEnCF,EAAOlB,IAAW8M,UAAUC,QAAQC,MAAM,GAC9CzM,QAAQC,IAAI,UAAWoB,GACvB,IAAIW,EAAY,GACbrB,GAAQA,EAAKqB,YACZA,EAAW,sBAAOrB,EAAKqB,aAAZ,CAAyBX,IAEpCW,EAAYuL,KAAKlM,GAGrBT,EAAUW,WAAW,SAASC,IAAIb,EAAKK,IAAIY,OAAO,CAC9C,YAAeI,EACf,MAASrB,EAAKkB,QAEjBjC,KAAK,WACFL,EAAS,CAAEM,KAAK,cAAewB,KAAMA,MAExCvB,MAAM,SAACC,GACJR,EAAS,CAAEM,KAAM,oBAAqBE,WIqQVoH,CAAY9F,QAOnDuM,2BACO,SAAA1N,GAEI,MAAO,CAAC,CACJqB,WAAY,QACZC,IAHQtB,EAAM2N,MAAMC,OAAO9M,OAJ5BsL,CAYbrG,GCvgBa8H,EAVK,WAChB,OACI,yBAAK5N,UAAU,0BACX,uBAAGA,UAAU,wBAAb,gBACA,2EACA,qDAA0B,uBAAGmF,KAAK,eAAR,YCsBvB0I,E,iLAnBX,OACE,kBAAC,IAAD,KACE,yBAAK7N,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8N,OAAK,EAACC,KAAK,IAAIC,UAAWlM,IACjC,kBAAC,IAAD,CAAOiM,KAAK,YAAYC,UAAWlI,IACnC,kBAAC,IAAD,CAAOiI,KAAK,cAAcC,UAAWlM,IACrC,kBAAC,IAAD,CAAOiM,KAAK,aAAaC,UAAW3K,IACpC,kBAAC,IAAD,CAAO0K,KAAK,eAAeC,UAAWJ,IACtC,kBAAC,IAAD,CAAO/G,OAAQ,kBAAM,kBAAC,IAAD,CAAU5G,GAAI,CAAC6J,SAAU,4B,GAZvC9G,aCGCiL,QACW,cAA7BpF,OAAOpG,SAASyL,UAEe,UAA7BrF,OAAOpG,SAASyL,UAEhBrF,OAAOpG,SAASyL,SAASR,MACvB,2D,mjBClBN,IAAMS,EAAY,CACdC,UAAW,MAqCAC,EAlCK,WAAgC,IAA/BhO,EAA8B,uDAAtB8N,EAAWG,EAAW,uCAC/C,OAAOA,EAAO5O,MACV,IAAK,cACD,OAAO,KACAW,EADP,CAEI+N,UAAW,iBAGnB,IAAK,gBACD,OAAO,KACA/N,EADP,CAEI+N,UAAW,OAGnB,IAAK,kBACD,OAAO/N,EAEX,IAAK,iBACD,OAAO,KACAA,EADP,CAEI+N,UAAW,OAGnB,IAAK,eACD,OAAO,KACA/N,EADP,CAEI+N,UAAWE,EAAO1O,IAAIkH,UAG9B,QACI,OAAOzG,IClCb8N,EAAY,CACdI,SAAU,CACN,CAAC1N,GAAG,IAAKwK,MAAM,qBAAsBmD,QAAQ,kBAC7C,CAAC3N,GAAG,IAAKwK,MAAM,qBAAsBmD,QAAQ,kBAC7C,CAAC3N,GAAG,IAAKwK,MAAM,qBAAsBmD,QAAQ,oBAmBtCC,EAfQ,WAAgC,IAA/BpO,EAA8B,uDAAtB8N,EAAWG,EAAW,uCAClD,OAAOA,EAAO5O,MACV,IAAK,iBAEL,IAAK,uBAEL,IAAK,cAEL,IAAK,oBAEL,QACI,OAAOW,I,mjBCnBnB,IAAM8N,EAAY,CACdO,UAAU,GAmBCC,EAhBK,WAAgC,IAA/BtO,EAA8B,uDAAtB8N,EAAWG,EAAW,uCAC/C,OAAOA,EAAO5O,MACV,IAAK,cACDG,QAAQC,IAAI,qBAAmBwO,GAC3B,IAAI1N,EAAQ0N,EAAOlL,YACnB,OAAO,KAAK/C,EAAZ,GAAsBO,EAAtB,CAA4B8N,UAAS,IAC7C,IAAK,oBACD,OAAOrO,EACX,IAAK,aAED,OADAR,QAAQC,IAAI,uBACL,KAAIO,EAAX,CAAkBQ,GAAG,GAAIE,KAAK,KAClC,QACI,OAAOV,I,mjBChBnB,IAAM8N,EAAY,GA2CHS,GAvCK,WAAgC,IAA/BvO,EAA8B,uDAAtB8N,EAAWG,EAAW,uCAC/C,OAAOA,EAAO5O,MACV,IAAK,cACD,MAAO,CAAC,GAAM4O,EAAO9N,KAAKK,IAC9B,IAAK,oBACD,OAAOR,EAEX,IAAK,YACD,MAAO,CAAC,GAAMiO,EAAO9N,KAAKK,IAC9B,IAAK,kBACD,OAAO,KAAKR,EAAZ,CAAmB4E,aAAa,IAEpC,IAAK,aACD,OAAO,KAAK5E,EAAZ,CAAmBQ,GAAI,KAE3B,IAAK,mBAGL,IAAK,eAEL,IAAK,qBAGL,IAAK,YAGL,IAAK,kBAGL,IAAK,eAEL,IAAK,qBAGL,QACI,OAAOR,I,SCpBbwO,GAAaC,YAAgB,CAC/BtP,KAAM6O,EACNU,QAASN,EACT7N,KAAM+N,EACNnO,KAAMoO,GACNxC,UAAW4C,oBACX1O,SAAU2O,oBAcCC,GAXO,SAAC7O,EAAOiO,GAQ3B,MANmB,eAAhBA,EAAO5O,OAETW,OAAQ8O,GAEVtP,QAAQC,IAAIO,GAEJwO,GAAWxO,EAAOiO,I,6CCrB1BhO,KAAS8O,cAVU,CACjBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,8CAKMrP,UAAf,ECsBIsP,GAAQC,YACVX,GAEA/C,YAEI2D,YACIC,KAAMC,kBAAkB,CAAEzQ,0BAAamB,gCAE3CuP,0BAAeC,IACfC,6BACID,GACA,CACIE,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,MAUnCV,GAAMW,oBAAoB9Q,KAAK,WAC3B+Q,IAAS3J,OAAO,kBAAC,IAAD,CAAU+I,MAAOA,IAAO,kBAAC,EAAD,OACpCxI,SAASC,eAAe,WPgE1B,kBAAmBoJ,WACrBA,UAAUC,cAAcC,MAAMlR,KAAK,SAAAmR,GACjCA,EAAaC,iB","file":"static/js/main.79bb91c6.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    \n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo brand-logo center\">Planning Poker</Link>    \n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from \"react-redux\"\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/enterRoom\">Enter Room</NavLink></li>\n            <li><NavLink to=\"/\"><a onClick={props.signOut}>Log Out</a></NavLink></li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                    { props.profile.initials }\n                </NavLink>\n            </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({ type: 'LOGIN_ERROR', err},)\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        }).catch(err => {\n            console.log(err);\n        }) \n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        )\n        .then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        })\n        .then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        })\n        .catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import { join } from \"path\";\n\nexport const createRoom = (room) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        // const userId = getState().firebase.auth.uid;\n        const profile = getState().firebase.profile;\n        let joinMessage = {\n            author: 'them',\n            type: 'text',\n            data: {\n                text: \"🤖 \" + getState().user.name + \" has joined the room.\"\n            }\n        };\n\n        fireStore.collection('rooms').add(\n            {\n                name: room.name,\n                users: [ \n                    {\n                        'name':getState().user.name,\n                        'id':getState().user.id,\n                        'isOpen': false,\n                        'newMessagesCount': 0\n                    } \n                ],\n                moderator: getState().user.id,\n                currentStory: '',\n                currentStoryId: null,\n                currentVotes: [],\n                roundsHistory: [],\n                activeRound: false,\n                messageList: [joinMessage],\n                currentStartTime: 0,\n                stories: room && room.stories? room.stories : []\n            }\n        )\n        .then((room) => {\n            console.log(\"THe room created is :\", room);\n            dispatch({ type:'CREATE_ROOM', room:room })\n        })\n        .catch((err) => {\n            dispatch({ type: 'CREATE_ROOM_ERROR', err })\n        })\n\n    }\n};\n\nexport const joinRoom = (room) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        // const userId = getState().firebase.auth.uid;\n        // const profile = getState().firebase.profile;\n        // const user = {\"id\":userId, \"name\":profile.firstName}\n\n        const userId = getState().user.id;\n        const username = getState().user.name;\n        const user = {\"id\":userId, \"name\":username}\n        let joinMessage = {\n            author: 'them',\n            type: 'text',\n            data: {\n                text: \"🤖 \" + username + \" has joined the room.\"\n            }\n        };\n\n        const roomsRef = fireStore.collection('rooms').doc(room.id)\n        roomsRef.get()\n        .then((docSnapshot) => {\n            if (docSnapshot.exists) {\n                fireStore.collection('rooms').doc(room.id).update({\n                users: fireStore.FieldValue.arrayUnion(user),\n                messageList: fireStore.FieldValue.arrayUnion(joinMessage),\n                })\n                .then(\n                    dispatch({ type:'JOIN_ROOM', room:room })\n                )\n                .catch((err) => {\n                    dispatch({ type: 'JOIN_ROOM_ERROR', err })\n                })\n            } else {\n                // alert(\"Invalid room!\");\n                dispatch({ type: 'JOIN_ROOM_ERROR' });\n            }\n        });\n    }\n};\n\nexport const updateCurrentStory = (data) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        fireStore.collection('rooms').doc(data.id).update({\n            \"currentStory\": data.currentStory\n        })\n        .then(() => {\n            dispatch({ type:'UPDATE_TEST', data: data })\n        })\n        .catch((err) => {\n            dispatch({ type: 'UPDATE_TEST_ERROR', err })\n        })\n\n    }\n};\n\nexport const toggleRound = (toggle) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        const fireBase = getFirebase();\n\n        if(toggle.activeRound) {\n\n            fireStore.collection('rooms').doc(toggle.id).update( {\n                activeRound: toggle.activeRound,\n                currentStoryId: toggle.currentStoryId,\n                currentVotes: [],\n                currentScore: null,\n                currentStartTime: new Date().getTime()\n            })\n            .then(() => {\n                dispatch({ type:'TOGGLE_ROUND', data: toggle })\n            })\n            .catch((err) => {\n                dispatch({ type: 'TOGGLE_ROUND_ERROR', err })\n            })\n\n        } else {\n            let room = getState().firestore.ordered.rooms[0];\n            let score = 0;\n            if(room.currentVotes.length > 0) {\n                score = room.currentVotes.reduce(\n                    (total, voteObj) => {\n                        return total + voteObj.vote;\n                }, 0);\n                score = score / room.currentVotes.length;\n            }\n            \n            let currentEndTime = new Date().getTime();\n            let duration = currentEndTime - room.currentStartTime;\n            duration = 1000*Math.round(duration/1000); // round to nearest second\n            var d = new Date(duration);\n            let history = {\n                storyId: room.currentStoryId,\n                storyName: room.currentStory,\n                score: score,\n                time: currentEndTime,\n                duration: d.getUTCMinutes() + 'm  ' + d.getUTCSeconds() + 's'\n            }\n\n            fireStore.collection('rooms').doc(toggle.id).update( {\n                activeRound: toggle.activeRound,\n                roundsHistory: fireStore.FieldValue.arrayUnion(history),\n                //currentVotes: [],\n                currentStory: '',\n                currentStoryId: null,\n                currentScore: score\n            })\n            .then(() => {\n                dispatch({ type:'TOGGLE_ROUND', data: toggle })\n            })\n            .catch((err) => {\n                dispatch({ type: 'TOGGLE_ROUND_ERROR', err })\n            })\n\n        }\n\n    }\n};\n\nexport const castVote = (currentVote) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        const userVote = (({ userId, vote, userName }) => ({ userId, vote, userName }))(currentVote);\n        let voteList=[];\n        let room = getState().firestore.ordered.rooms[0]; \n        if(room && room.currentVotes) {\n            voteList = room.currentVotes.filter(vote => {\n                return vote.userId !== userVote.userId\n            })\n        }\n        voteList.push(userVote);\n        fireStore.collection('rooms').doc(currentVote.roomId).update({\n            currentVotes: voteList\n        })\n        .then(() => {\n            dispatch({ type:'CAST_VOTE', currentVote })\n        })\n        .catch((err) => {\n            dispatch({ type: 'CAST_VOTE_ERROR', err })\n        })\n        \n\n    }\n};\n\nexport const leaveRoom = (room) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        const userId = getState().user.id;\n        const userName = getState().user.name;\n        let quitMessage = {\n            author: 'them',\n            type: 'text',\n            data: {\n                text: \"🤖 \" + userName + \" has left the room.\"\n            }\n        };\n        Promise.all([\n            room.users.length == 1 && room.users[0].id == userId ? \n            // if last user, delete the entire room\n            fireStore.collection('rooms').doc(room.id).delete() \n            :\n            // update list of room users by filtering out leaving user\n            fireStore.collection('rooms').doc(room.id).update({\n                users: room.users.filter(user => user.id !== userId),\n                messageList: [...room.messageList, quitMessage]\n            }),\n            \n            fireStore.collection('users').doc(userId).delete()  \n            \n        ])\n        .then(\n            // dispatch({ type:'LEAVE_ROOM', room:room }),\n            // dispatch({ type:'CLEAR_USER', room:room }),\n            dispatch({ type:'CLEARSTORE', room:room }),\n        )\n        .catch((err) => {\n            dispatch({ type: 'LEAVE_ROOM_ERROR', err })\n        })\n\n        \n\n    }\n};\n\nexport const sendMessage = (data) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        let room = getState().firestore.ordered.rooms[0]; \n        console.log(\"Send : \", data);\n        let messageList=[];\n        if(room && room.messageList) \n            messageList = [...room.messageList, data];\n        else\n            messageList.push(data);\n\n            \n        fireStore.collection('rooms').doc(room.id).update({\n            \"messageList\": messageList,\n            \"users\": room.users\n        })\n        .then(() => {\n            dispatch({ type:'UPDATE_TEST', data: data })\n        })\n        .catch((err) => {\n            dispatch({ type: 'UPDATE_TEST_ERROR', err })\n        })\n\n    }\n};\n\n// export const readMessage = (data) => {\n//     return (dispatch, getState, { getFirebase, getFirestore } ) => {\n//         const fireStore = getFirestore();\n//         let room = getState().firestore.ordered.rooms[0]; \n//         let users = [];\n//         if(room && room.users){\n//             users = [...room.users];\n//         users.map((user) => {\n//             if(user.id == data.id) {\n//                 if(!user.isOpen)\n//                     user.newMessagesCount = 0;\n//                 user.isOpen = !user.isOpen;\n//             }\n//         })\n        \n//         console.log('Reading users are ', room.users);\n//         fireStore.collection('rooms').doc(room.id).update({\n//             \"users\": users\n//         })\n//         .then(() => {\n//             dispatch({ type:'UPDATE_TEST', data: data })\n//         })\n//         .catch((err) => {\n//             dispatch({ type: 'UPDATE_TEST_ERROR', err })\n//         })\n\n//     }\n//     };\n// }\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createUser } from '../../store/actions/userActions';\nimport { joinRoom } from '../../store/actions/roomActions';\n\nclass CreateUser extends Component {\n\tstate = {\n\t\tname: ''\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t[e.target.id]: e.target.value\n\t\t})\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif(!this.state.name) alert(\"Enter valid username.\");\n\t\telse this.props.createUser(this.state);\n\t}\n\trender() {\n\t\tif(this.props.user && this.props.user.id && this.props.location && this.props.location.state && this.props.location.state.redirectRoom){\n\t\t\tlet roomId = this.props.location.state.redirectRoom.split('/')[2];\n\t\t\tthis.props.joinRoom({'id':roomId});\n\t\t\treturn <Redirect to= {this.props.location.state.redirectRoom} />\n\t\t}\n\t\telse if (this.props.user && this.props.user.id) {\n\t\t\treturn <Redirect to= {'/enterRoom'} />\n\t\t}\n\t\tconsole.log(\"Props : \", this.props.location)\n\t\treturn (\n\t\t<div className=\"container\">\n\t\t\t<form className=\"white\" onSubmit={this.handleSubmit}>\n\t\t\t<h5 className=\"grey-text text-darken-3\">Create User</h5>\n\t\t\t<div className=\"input-field\">\n\t\t\t\t\n\t\t\t\t<i className=\"material-icons prefix\">account_circle</i>\n\t\t\t\t<input type=\"text\" id='name' className=\"validate\" onChange={this.handleChange} />\n\t\t\t\t<label htmlFor=\"name\">Username</label>\n\t\t\t</div>\n\t\t\t<div className=\"input-field\">\n\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Create User</button>\n\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn { \n\t\tuser: state.user\n\t };\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n\treturn {\n\t\tcreateUser: (name) => dispatch(createUser(name)),\n\t\tjoinRoom: (room) => dispatch(joinRoom(room))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser)","export const createUser = (name) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const fireStore = getFirestore();\n        fireStore.collection('users').add(\n            {\n                firstName: name.name,\n                lastName: name.name,\n                initials: \"XY\",\n            }\n        )\n        .then(function(user) {\n            // console.log(\"User -->\", user);\n            let userDetails = {\n                id:user.id,\n                name: name.name\n            }\n            dispatch({ type:'CREATE_USER', userDetails })\n        })\n        .catch((err) => {\n            dispatch({ type: 'CREATE_USER_ERROR', err })\n        })\n\n    }\n};","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport { createRoom, joinRoom } from '../../store/actions/roomActions';\n// import { firestoreConnect } from 'react-redux-firebase';\nimport Dropzone from 'react-dropzone'\nimport M from 'materialize-css';\n\nclass EnterRoom extends Component {\n\t// state = {\n\t// \tstories,\n\t// }\n\n\tcomponentDidMount() {\n\t\tlet options = {\n\t\t\tswipeable: true,\n\t\t\t// responsiveThreshold: 500\n\t\t}\n\t\tM.Tabs.init(this.Tabs, options);\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// var instance = M.Tabs.init(el, options);\n\t}\n\n\thandleChange = (e) => {\n\t\t// console.log(\">\", this.props);\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value,\n\t\t\t// room: { ...this.props.room, invalidRoom: false }\n\t\t})\n\t}\n\n\thandleCreateSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif(this.state && this.state.name)\n\t\t\tthis.props.createRoom(this.state);\n\t\telse\n\t\t\talert(\"Enter a Valid Room Name! \");\n\n\t}\n\n\thandleJoinSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.joinRoom(this.state);\n\t}\n\n\thandleFileDrop = (acceptedFiles) =>{\n\t\tif (acceptedFiles.length === 1) {\n\t\t\tlet file = acceptedFiles[0];\n\t\t\tif(file.type == 'text/rtf' || file.type == 'text/plain'){\n\t\t\t\tconst reader = new FileReader()\n\t\t\t\treader.onabort = () => console.log('file reading was aborted')\n\t\t\t\treader.onerror = () => console.log('file reading has failed')\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tconst fileContents = reader.result\n\t\t\t\t\tlet userStories = fileContents.split('\\n').filter(story =>{\n\t\t\t\t\t\treturn story.length>0\n\t\t\t\t\t})\n\t\t\t\t\tuserStories.forEach(story => {\n\t\t\t\t\t\tconsole.log(\"Story is : \", story);\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({...this.state, stories: userStories})\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\tdisplayLength: 2500,\n\t\t\t\t\t\tclasses: 'rounded',\n\t\t\t\t\t\thtml: 'User Stories Loaded'\n\t\t\t\t\t}\n\t\t\t\t\tM.toast(options)\n\t\t\t\t\tconsole.log(this.state);\n\t\t\t\t  \n\t\t\t\t}\n\t\t\t\tacceptedFiles.forEach(file => reader.readAsBinaryString(file))\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\talert(\"Choose a valid txt/rtf file!\");\n\t\t\t}\n\t\t  } else { \n\t\t\t  alert(\"Choose 1 text file!\");\n\t\t  }\n\t\t\n\t}\n\trender() {\n\t\tconst { room, auth, user, stories } = this.props;\n\t\t\n\t\tif (user && !user.id) {\n\t\t\treturn <Redirect to=\"/createUser\" />\n\t\t}\n\t\t// return <Redirect to=\"/createUser\" />\n\n\t\tif(this.props.invalidRoom) {\n\t\t\tlet options = {\n\t\t\t\tdisplayLength: 2000,\n\t\t\t\tclasses: 'rounded',\n\t\t\t\thtml: 'Invalid Room. Try Again!'\n\t\t\t}\n\t\t\tM.toast(options)\n\t\t}\n\n\t\tif (room && room.id) {\n\t\t\treturn <Redirect to= {'/room/'+room.id} /> \n\t\t}\n\t\t\n\t\treturn (\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"container mt-60\">\n\t\t\t\t\t\t<ul ref={ Tabs => { this.Tabs = Tabs} } id=\"tabs-swipe-demo\" className=\"tabs tabs-fixed-width tab-demo z-depth-1\" >\n\t\t\t\t\t\t\t<li className=\"tab\">\n\t\t\t\t\t\t\t\t<a href=\"#create-room-tab\">Create Room</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"tab\">\n\t\t\t\t\t\t\t\t<a href=\"#join-room-tab\">Join Room</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<div id=\"create-room-tab\" >\n\t\t\t\t\t\t\t<form className=\"white mt-0\" onSubmit={this.handleCreateSubmit}>\n\t\t\t\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Create Room</h5>\n\t\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons prefix\">account_balance</i>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id='name' onChange={this.handleChange} />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Room Name</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"upload-border center-align cursor-pointer\">\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Dropzone onDrop={acceptedFiles => this.handleFileDrop(acceptedFiles)}>\n\t\t\t\t\t\t\t\t\t{({getRootProps, getInputProps}) => (\n\t\t\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t\t\t\t\t\t\t<p>To import user stories automatically, drag and drop a .txt file containing user stories separated by line</p>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"large material-icons\">cloud_upload</i>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Dropzone>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Create Room</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"join-room-tab\" >\n\t\t\t\t\t\t\t<form className=\"white mt-0\" onSubmit={this.handleJoinSubmit}>\n\t\t\t\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Join Room</h5>\n\t\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons prefix\">fingerprint</i>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id='id' onChange={this.handleChange} />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"id\">Room ID</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Join Room</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tif(state)\n\t\tconsole.log(\"state is -> \", state)\n\treturn {\n\t\troom: state.room,\n\t\tuser: state.user,\n\t\tinvalidRoom: state.room.invalidRoom,\n\t\tstories: state.stories\n\t}\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n\treturn {\n\t\tcreateRoom: (room) => dispatch(createRoom(room)),\n\t\tjoinRoom: (room) => dispatch(joinRoom(room))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterRoom);","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport uuid from \"uuid\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { updateCurrentStory, toggleRound, castVote, leaveRoom, sendMessage} from '../../store/actions/roomActions'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport 'react-sharingbuttons/dist/main.css';\nimport { Email, Facebook, Twitter } from 'react-sharingbuttons';\nimport M from 'materialize-css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\nimport {Launcher} from 'react-chat-window';\nimport * as jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n\n\nclass Room extends Component {\n\n    state = {\n        // chosen: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            render: true //Set render state to false\n        }\n    }\n\n    _onMessageWasSent(message) {\n        if(message.type == 'text'){\n            message.data.text= this.props.user.name + ' ➡️ ' + message.data.text;\n        }\n        else if(message.type == 'emoji') {\n            message.type = \"text\"\n            message.data.text = this.props.user.name + ' ➡️ ' + message.data.emoji\n        }\n        this.props.sendMessage({\n            author: 'them',\n            type: message.type,\n            data: message.data\n        })\n    }\n\n    _handleClick() {\n        // this.props.readMessage({\n        //     id: this.props.user.id\n        // })\n    }\n\n    printDocument() {\n\n        var doc = new jsPDF('p');\n        var res = doc.autoTableHtmlToJson(document.getElementById(\"roundHistoryTable\"));\n\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        today = mm + '/' + dd + '/' + yyyy;\n\n        var header = function(data) {\n            doc.setFontSize(18);\n            doc.setTextColor(40);\n            doc.setFontStyle('normal');\n            //doc.addImage(headerImgData, 'JPEG', data.settings.margin.left, 20, 50, 50);\n            doc.text(\"Planning Poker - \" + today, data.settings.margin.left, 50);\n        };\n\n        var options = {\n            beforePageContent: header,\n            margin:10,\n            startY: doc.autoTableEndPosY() + 70\n        };\n\n        doc.autoTable(res.columns, res.data, options);\n\n        doc.save(\"Planning Poker.pdf\");\n    }\n    \n     \n    componentDidMount() {\n        window.addEventListener('beforeunload', this.keepOnPage);\n        window.addEventListener('unload', this.keepOnPage);\n        window.addEventListener('pagehide', this.keepOnPage);\n        var elems = document.querySelectorAll('.modal');\n        var instances = M.Modal.init(elems);\n        var ddelems = document.querySelectorAll('.dropdown-trigger');\n        var ddinstances = M.Dropdown.init(ddelems);\n        var sideElems = document.querySelectorAll('.sidenav');\n        var sideInstances = M.Sidenav.init(sideElems);\n\n        // setTimeout(function() { //Start the timer\n        //     this.setState({render: true}) //After 1 second, set render to true\n        // }.bind(this), 150)\n    }\n    //150\n    \n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.keepOnPage);\n        window.addEventListener('unload', this.keepOnPage);\n        window.addEventListener('pagehide', this.keepOnPage);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        let updateStory = {\n            'id':this.props.room[0].id,\n            'currentStory': e.target.value\n        }\n        this.props.updateCurrentStory(updateStory);\n    }\n\n    toggleRound = (toggle) => {\n\n        if(toggle && !this.props.currentStory) alert(\"Enter a story to start round.\");\n        else {\n            let toggleRound = {\n                'id':this.props.room[0].id,\n                'activeRound': toggle,\n                'currentStoryId': toggle ? uuid.v4() : null\n            }\n            this.props.toggleRound(toggleRound);\n        }\n    }\n\n    castVote = (vote) =>{\n        let currentVote = {\n            'roomId':this.props.room[0].id,\n            'userId': this.props.user.id,\n            'userName': this.props.user.name,\n            'vote': vote\n        }\n        this.props.castVote(currentVote);\n    }\n\n    copyUrl = () => {\n        let options = {\n            displayLength: 2000,\n            classes: 'rounded',\n            html: 'URL Copied'\n        }\n        M.toast(options)\n    }\n \n    keepOnPage = (e) => {\n        this.props.leaveRoom(this.props.roomTest);\n        return undefined;\n    }\n\n    assignStory = (story) => {\n        let updateStory = {\n            'id':this.props.room[0].id,\n            'currentStory': story\n        }\n        this.props.updateCurrentStory(updateStory);\n    }\n\n\trender() {\n        \n        \n\n        const votes = [1, 2, 3, 5, 8, 13, 20, 40, 100];\n\n        const { room, currentStory, currentScore, activeRound, roundsHistory, messageList, userList, localRoom, leaveRoom, user, stories } = this.props;\n\n        // if(localRoom && leaveRoom) \n        // console.log(\"Leaving...\")\n        \n        let currentUserStatus = userList ? userList.filter((user)=>{\n            return user.id == this.props.user.id;\n        }) : {};\n\n        let isOpen = currentUserStatus ? currentUserStatus.isOpen : false;\n\n        let newMessagesCount = currentUserStatus ? currentUserStatus.newMessagesCount : 0;\n\n        // if(roundsHistory && roundsHistory.length>1)\n        //     roundsHistory.sort((a,b)=>{\n        //         return b.time - a.time;\n        // })\n        \n            const showRoundResult = currentScore \n            ? \n            <span className=\"right\">{ currentScore } points</span>\n            : \n            '';\n\n        if (localRoom && !localRoom.id) return <Redirect to={{\n                pathname: '/enterRoom',\n            }} \n        />\n        console.log(\"-->\", this.props)\n        if (this.props.user && !this.props.user.id) return <Redirect to={{\n                pathname: '/createUser',\n                state: { \n                    redirectRoom: this.props.history.location.pathname,\n                }\n            }} \n        />\n\n        let roomUrl = room && room[0].id ? 'https://nv-marioplan.firebaseapp.com/room/'+room[0].id:'';\n\n        let currentUserVote = room && room[0].currentVotes.find(obj => {\n            return obj.userId === this.props.user.id\n        });\n\n        const showVotingCards = votes.map(vote => {\n                return (\n                    vote < 20 ?\n                        <img \n                            onClick={()=>this.castVote(vote)} \n                            className={ (currentUserVote && vote == currentUserVote.vote) \n                            ? \"vote-selected mr-10 cursor-pointer\" \n                            : \"mr-10 cursor-pointer\"} \n                            width=\"13%\" height=\"13%\" \n                            src={\"/img/\"+vote+\".png\"} \n                            key={vote}\n                        />\n                    :\n                        <img \n                            onClick={()=>this.castVote(vote)} \n                            className={ (currentUserVote && vote == currentUserVote.vote) \n                            ? \n                            \"vote-selected mr-20 cursor-pointer\" \n                            : \"mr-20 cursor-pointer\"} \n                            width=\"18%\" height=\"18%\" \n                            src={\"/img/\"+vote+\".png\"} \n                            key={vote}\n                        /> \n                );\n        })\n\n        const showUserStories = stories.map((story) => {\n            return <a onClick={()=>this.assignStory(story)} key={story} href=\"#!\" className={ currentStory && currentStory == story? \"collection-item active\": \"collection-item\"}>{story}</a>\n        })\n        \n        \n        let renderContainer = false //By default don't render anything\n        if(this.state.render) { //If this.state.render == true, which is set to true by the timer.\n            renderContainer = <div>\n            <div className=\"container\">\n\n                {/* Header */}\n                <h3>\n                    {room ? room[0].name : \"\"}\n                    <a className=\"btn grey right hide-on-small-only\" onClick={()=>{\n                        console.log('BEFORE :', this.props)\n                        {/* this.setState(user={}); */}\n                        this.props.leaveRoom(this.props.roomTest)\n                        console.log('AFTER', this.props)\n                        }}>\n                        <i className=\"material-icons right\">exit_to_app</i>\n                        Exit\n                    </a>\n                    <a className=\"modal-trigger btn green right mr-10 hide-on-small-only\" href=\"#share-modal\" >\n                        <i className=\"material-icons right\">share</i>\n                        Invite Team\n                    </a>\n                    <div className=\"hide-on-med-and-up right lighten-1\">\n                    <a className='dropdown-trigger btn btn-floating pink' href='#' data-target='dropdown1'><i className=\"material-icons right\">menu</i></a>\n                        <ul id='dropdown1' className='dropdown-content'>\n                            <li>\n                                <a className=\"modal-trigger\" href=\"#share-modal\">\n                                    {/* <i className=\"material-icons right\">share</i> */}\n                                    Share\n                                </a>\n                            </li>\n                            <li>\n                                <a onClick={()=>{this.props.leaveRoom(this.props.roomTest)}}>\n                                    {/* <i className=\"material-icons right\">exit_to_app</i> */}\n                                    Exit\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </h3>\n\n                {/* Share Modal */}\n                <div id=\"share-modal\" className=\"modal bottom-sheet\">\n                    <div className=\"modal-content center-align\">\n                        <h5>Share Room</h5>\n\n                        <div className=\"row\">\n                            <div className=\"col s8 m8 l8 offset-l2 s-2 m-2\">\n                                <input type=\"text\" readOnly value={roomUrl} />\n                            </div>\n                            <div className=\"col s2 m2 l2\">\n                                <CopyToClipboard text={roomUrl} onCopy={this.copyUrl}>\n                                    <a className=\"btn-floating grey\">\n                                        <i className=\"material-icons right\">content_copy</i>\n                                    </a>\n                                </CopyToClipboard>\n                            </div>\n                        </div>\n                        \n                        <div>\n                            <Facebook url={roomUrl} />\n                            <Email url={roomUrl} text={'Email'} subject={\"Planning Poker: Join your team!\"} />\n                        </div>\n\n                    </div>\n                    <div className=\"modal-footer\">\n                        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n                    </div>\n                </div>\n\n            </div>\n            \n            <div className=\"row\">\n                <div className=\"col s12 m6 l6\">\n\n                    {/* Current Story Card */}\n                    <div className=\"card white\">\n                        <div className=\"card-content \">\n                            <span className=\"card-title\">\n                                Current Story\n                                <span className=\"right\">\n                                    <Loader type=\"Watch\" color=\"black\" height={35} width={35} visible={activeRound}/>\n                                </span>                                \n                            </span>\n                            <div className=\"input-field\">\n                                <textarea \n                                type=\"text\" \n                                id=\"currentStory\" \n                                value={currentStory} \n                                onChange={this.handleChange} \n                                readOnly={ activeRound } \n                                placeholder=\"Enter Story...\"\n                                className=\"materialize-textarea\"/>\n                                </div>\n                        </div>\n                        <div className=\"card-action\">\n                            { \n                                activeRound ? \n                                <a className=\"pink lighten-1 z-depth-0 btn\" onClick={()=>this.toggleRound(false)}>End</a>\n                                : \n                                <a className=\"pink lighten-1 z-depth-0 btn\" onClick={()=>this.toggleRound(true)}>Start</a>\n                            }\n                        </div>\n                    </div>\n\n                    {/* Choose Vote Card */}\n                    {\n                        activeRound\n                        ? \n                        <div className=\"card white\">\n                            <div className=\"card-content \">\n                                <span className=\"card-title center-align\">Choose Vote</span>\n                                <div className=\"row center-align mt-20\">\n                                    { showVotingCards }\n                                </div>                                  \n                            </div>\n                        </div> \n                        : ''\n                    }\n\n                    {\n                        !activeRound && stories && stories.length>0 \n                        ? \n                        <div className=\"collection with-header user-story-list\">\n                            <div className=\"collection-header\"><h4>User Stories</h4></div>\n                            { showUserStories }\n                        </div>\n                        :\n                        ''\n                    }\n\n                </div>\n                <div className=\"col s12 m6 l6\">\n                    \n                    {/* Round Results Card */}\n                    <div className=\"card white round-results-card\">\n                        <div className=\"card-content \">\n                            <div className=\"card-title\">\n                                Round Results\n                                { showRoundResult }\n                            </div>\n                            <div className=\"row\">\n                                {room && room[0].users.map(user => {\n                                    let userVoteObj = room[0].currentVotes.find(obj => {\n                                        return obj.userId === user.id\n                                    });\n                                    let userVote = userVoteObj ? userVoteObj.vote : '?'\n\n                                    let fileName = userVoteObj && userVoteObj.vote && !activeRound ? '/img/'+userVoteObj.vote+'.png' : '/img/card-flipped.jpg';\n\n                                    return (\n\n                                        <div key={user.id} className=\"col s3 l3 m3 mt-20\">\n\n                                        {\n                                        userVoteObj && userVoteObj.vote && !activeRound ? \n\n                                        <img className=\"mr-20\" width=\"65%\" height=\"65%\" src={fileName}></img>\n                                        \n                                        : \n                                        \n                                        <img className=\"mr-20 card-border\" width=\"65%\" height=\"65%\" src={fileName}></img> \n                                        }\n\n                                            <p>\n                                                { user.name }\n                                                {\n                                                    userVoteObj && userVoteObj.vote && activeRound ?\n                                                        <i  className=\"material-icons tiny green white-text ml-10\" >done</i>\n                                                    : ''\n                                                }\n                                            </p>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Round History Card */}\n                    <div className=\"card white round-history-card\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">\n                                Round History \n                                <i title=\"Download Results\" className=\"material-icons right cursor-pointer\" onClick={this.printDocument}>cloud_download</i>\n                            </span>\n                            \n                            <table className=\"striped\" id=\"roundHistoryTable\">\n                                <thead>\n                                    <tr>\n                                        <th>Story Name</th>\n                                        <th>Average Score</th>\n                                        <th>Duration</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    roundsHistory && roundsHistory.map(round => {\n                                        return (\n                                            <tr key={ round.storyId }>\n                                                <td>{ round.storyName }</td>\n                                                <td>{ round.score }</td>\n                                                <td>{ round.duration }</td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Launcher\n                agentProfile={{\n                teamName: 'Planning Poker Chat',\n                imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n                }}\n                onMessageWasSent={this._onMessageWasSent.bind(this)}\n                messageList={messageList}\n                showEmoji\n            />\n        </div>\n        }\n        else{\n            renderContainer = ''\n            {/* <div className=\"container center-align mt-60\">\n                <Loader type=\"Oval\" color=\"black\" height={60} width={60} visible=\"true\"/>\n                <h4>Getting your party started...</h4>\n            </div> */}\n        }\n        return (\n        renderContainer //Render the dom elements, or, when this.state == false, nothing.\n        )\n\n\t}\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"Room State -> \", state);\n\treturn {\n        room: state.firestore.ordered.rooms,\n\n        currentStory: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0].currentStory : \"\",\n\n        messageList: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0].messageList : [],\n\n        stories: state.firestore.ordered.rooms ? \n        state.firestore.ordered.rooms[0].stories : [],\n\n        currentScore: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0].currentScore : \"\",\n\n        activeRound: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0].activeRound : false,\n\n        roundsHistory: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0].roundsHistory : [],\n\n        user: state.user,\n        localRoom:state.room,\n        leaveRoom: state.room.leaveRoom,\n\n        roomTest: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0] : null,\n\n        userList: state.firestore.ordered.rooms ? state.firestore.ordered.rooms[0].users : [] \n\n\t}\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n\treturn {\n        // createRoom: (name) => dispatch(createRoom(name))\n        updateCurrentStory: (story) => dispatch(updateCurrentStory(story)),\n        toggleRound: (toggle) => dispatch(toggleRound(toggle)),\n        castVote: (currentVote) => dispatch(castVote(currentVote)),\n        leaveRoom: (room) => dispatch(leaveRoom(room)),\n        sendMessage: (data) => dispatch(sendMessage(data)),\n        // readMessage: (data) => dispatch(readMessage(data)),\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\tfirestoreConnect(\n        props => {\n            const id  = props.match.params.id;\n            return [{\n                collection: 'rooms', \n                doc: id\n            }]\n          }\n        \n\t)\n)(Room);","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nconst InvalidRoom = () => {\n    return (\n        <div className=\"container center-align\">\n            <i className=\"material-icons large\">broken_image</i>\n            <h3>Oops, looks like this room doesn't exist...</h3>\n            <h5>Star over by clicking <a href=\"/createUser\">here.</a></h5>\n        </div>\n    )\n}\n\nexport default InvalidRoom","import React, {Component} from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport CreateUser from './components/users/CreateUser';\nimport EnterRoom from './components/rooms/EnterRoom';\nimport Room from './components/rooms/Room';\nimport InvalidRoom from './components/rooms/InvalidRoom'\nimport { Redirect } from 'react-router-dom'\n\nclass  App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={CreateUser} />\n            <Route path=\"/room/:id\" component={Room} />\n            <Route path=\"/createUser\" component={CreateUser} />\n            <Route path=\"/enterRoom\" component={EnterRoom} />\n            <Route path=\"/invalidRoom\" component={InvalidRoom} />\n            <Route render={() => <Redirect to={{pathname: \"/invalidRoom\"}} />} />\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNOUT_SUCCESS':\n            return state;\n\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default:\n            return state    \n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id:'1', title:'help me find peach', content:'blah blah blah'},\n        {id:'2', title:'help me find apple', content:'blah blah blah'},\n        {id:'3', title:'help me find mango', content:'blah blah blah'},\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            return state;\n        case 'UPDATE_TEST':\n            return state;\n        case 'UPDATE_TEST_ERROR':\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","const initState = {\n    loggedIn: false\n}\n\nconst userReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_USER':\n            console.log(\"Action ------> \", action);\n                let user  = action.userDetails; \n                return { ...state, ...user, loggedIn:true };\n        case 'CREATE_USER_ERROR':\n            return state;\n        case 'CLEAR_USER':\n            console.log(\"Sampling user redux\")\n            return {...state, id:'', name:''}\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","const initState = {\n    \n}\n\nconst roomReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_ROOM':\n            return {'id': action.room.id};\n        case 'CREATE_ROOM_ERROR':\n            return state;\n\n        case 'JOIN_ROOM':\n            return {'id': action.room.id};\n        case 'JOIN_ROOM_ERROR':\n            return { ...state, invalidRoom: true };\n\n        case 'LEAVE_ROOM':\n            return { ...state, id: '' };\n\n        case 'LEAVE_ROOM_ERROR':\n            return state;\n\n        case 'TOGGLE_ROUND':\n            return state;\n        case 'TOGGLE_ROUND_ERROR':\n            return state;\n\n        case 'CAST_VOTE':\n            // return {...state, 'currentVote': action.currentVote.vote};\n            return state;\n        case 'CAST_VOTE_ERROR':\n            return state;\n\n        case 'READ_MESSAGE':\n            return state;\n        case 'READ_MESSAGE_ERROR':\n            return state;\n         \n        default:\n            return state;\n    }\n}\n\nexport default roomReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport userReducer from './userReducer';\nimport roomReducer from './roomReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\n// const rootReducer = combineReducers(\n//     {\n//         auth: authReducer,\n//         project: projectReducer,\n//         user: userReducer,\n//         room: roomReducer,\n//         firestore: firestoreReducer,\n//         firebase: firebaseReducer\n//     }\n// );\n\nconst appReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    user: userReducer,\n    room: roomReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n })\n \n  const rootReducer = (state, action) => {\n      \n  if (action.type === 'CLEARSTORE') {\n    \n    state = undefined\n  }\n  console.log(state)\n \n   return appReducer(state, action)\n }\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCXiaaKeEoxxMCDoeiHToiRTnFad_KuAqg\",\n    authDomain: \"nv-marioplan.firebaseapp.com\",\n    databaseURL: \"https://nv-marioplan.firebaseio.com\",\n    projectId: \"nv-marioplan\",\n    storageBucket: \"\",\n    messagingSenderId: \"823946612980\",\n    appId: \"1:823946612980:web:8c57da3f320f3de21acea1\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n// const loadState = () => {\n//     try {\n//       const serializedState = localStorage.getItem('state');\n//       if(serializedState === null) {\n//         return undefined;\n//       }\n//       return JSON.parse(serializedState);\n//     } catch (e) {\n//       return undefined;\n//     }\n//   };\n  \n//   const saveState = (state) => {\n//     try {\n//       const serializedState = JSON.stringify(state);\n//       localStorage.setItem('state', serializedState);\n//     } catch (e) {\n//       // Ignore write errors;\n//     }\n//   };\n  \n//   const persistedState = loadState();\n  \n  \n  \n\nconst store = createStore(\n    rootReducer, \n    // persistedState,\n    compose (\n        // store enhancers\n        applyMiddleware(\n            thunk.withExtraArgument({ getFirebase, getFirestore })\n        ),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(\n            fbConfig,\n            { \n                useFirestoreForProfile: true, // to sync firestore 'users' collection to 'profile' attribute of firebase\n                userProfile: 'users',\n                attachAuthIsReady: true\n            }\n        )\n    )\n);\n\n// store.subscribe(() => {\n//   saveState(store.getState());\n// });\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, \n        document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}